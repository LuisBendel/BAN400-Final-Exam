"0","# Register parallel backend to use multiple cores"
"0","numCores <- detectCores()"
"0","registerDoParallel(cores = numCores)"
"0",""
"0","# iterate over n_var in parallel, estimate models for each n_var"
"0","random_model_sim <-"
"0","  foreach("
"0","    i = 10:66,"
"0","    .combine = rbind,"
"0","    .packages = c(""tidyverse""),"
"0","    # create a tibble that is returned after the parallel processing"
"0","    .init = tibble("
"0","      n_var = numeric(),"
"0","      expl_var = list(),"
"0","      model_call = character(),"
"0","      coef_fastLmPure = numeric(),"
"0","      pval_fastLmPure = numeric(),"
"0","      stderr_fastLmPure = numeric()"
"0","    )"
"0","  ) %dopar% {"
"0","    # store all models for each n_var in a temporary object"
"0","    tmp_res <- est_random_models("
"0","      coef_th = 100,"
"0","      pval_th = -1,"
"0","      n_var = c(i:i),"
"0","      n_mod = 100,"
"0","      timeout = 100"
"0","    ) %>%"
"0","      unnest(results)"
"0",""
"0","    # return the tibble with all 5700 models"
"0","    tibble("
"0","      n_var = i,"
"0","      expl_var = tmp_res$expl_var,"
"0","      model_call = tmp_res$model_call,"
"0","      coef_fastLmPure = tmp_res$coefficient_estimate,"
"0","      pval_fastLmPure = tmp_res$p_value,"
"0","      stderr_fastLmPure = tmp_res$stderr"
"0","    )"
"0","  }"
"0",""
"0","# Stop the parallel backend"
"0","stopImplicitCluster()"
"0",""
"0","# plan multisession for parallel use of the map function (future map)"
"0","plan(multisession, workers = detectCores())"
"0",""
"0","# estimate the same models with the lm function"
"0","random_model_sim$model_lm <-"
"0","  future_map(random_model_sim$expl_var,"
"0","    is_variable_significant,"
"0","    response = ""GR6096"","
"0","    variable_to_assess = ""SOCIALIST"","
"0","    data = bacedata"
"0","  )"
"0",""
"0","# back to sequential processing"
"0","plan(sequential)"
