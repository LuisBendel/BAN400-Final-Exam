"0","# vector containing all optional explanatory variables that can be combinated"
"0","expl_all <- names(bacedata)[!names(bacedata) %in% c(""GR6096"", ""SOCIALIST"")]"
"0",""
"0","# random approach. Create function to conveniently call later"
"0","est_random_models <- function(variables = expl_all,"
"0","                              coef_th = 0,"
"0","                              pval_th = 0.05,"
"0","                              n_var = c(0:15),"
"0","                              n_mod = 100000, timeout = 30,"
"0","                              setseed = FALSE) {"
"0","  # set starting values for coef and pval and i (n models)"
"0","  coef <- 0"
"0","  pval <- 1"
"0","  i <- 0"
"0",""
"0","  # create tibble with all models that are assessed. We want to keep track of them"
"0","  results <- tibble("
"0","    expl_var = list(),"
"0","    results = data.frame()"
"0","  )"
"0",""
"0","  # set start time with sys.time()"
"0","  start_time <- Sys.time()"
"0",""
"0","  # set seed for reproducability, important to get the same ""fraud model"""
"0","  # however, for my extra analysis, I do not want to set a seed"
"0","  if (setseed == TRUE) {"
"0","    set.seed(123)"
"0","  }"
"0",""
"0","  # randomly estimate models for a certain amount of time"
"0","  while ((coef <= coef_th | pval >= pval_th) && difftime(Sys.time(), start_time, units = ""secs"") < timeout && i < n_mod) {"
"0","    # generate a random number between 0 and n_var (parameter for function)"
"0","    n_expl <- sample(n_var, size = 1)"
"0",""
"0","    # now get a random sample with n_expl explanatory variables from the expl_var vector"
"0","    expl_incl <- sample(variables, size = n_expl)"
"0",""
"0","    # estimate the model with the function from A5"
"0","    model_tmp <- is_variable_significant_cpp("
"0","      response = ""GR6096"","
"0","      variable_to_assess = ""SOCIALIST"","
"0","      covariates = expl_incl"
"0","    )"
"0",""
"0","    # reset the coefficient and pvalue and i (n_mod)"
"0","    coef <- model_tmp$coefficient_estimate"
"0","    pval <- model_tmp$p_value"
"0","    i <- i + 1"
"0",""
"0","    # append row to tibble where we keep track of all tries"
"0","    results <- results %>%"
"0","      add_row("
"0","        expl_var = list(expl_incl),"
"0","        results = model_tmp"
"0","      )"
"0","  }"
"0",""
"0","  # print message if model is found"
"0","  if (coef > 0 && pval < 0.05) {"
"0","    print(paste0(""Estimated "", as.character(nrow(results)), "" random models and found one significant positive estimate.""))"
"0","  }"
"0",""
"0","  results"
"0","}"
